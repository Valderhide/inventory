{"version":3,"sources":["ItemForm.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["Category","title","items","setSelectedCategory","selectedCategory","handleSelect","value","oldValues","Col","Accordion","className","Item","eventKey","Header","map","titles","subCategories","Body","DropdownButton","as","ButtonGroup","variant","onSelect","subCategory","Dropdown","AddItemForm","makeHandleSubmit","useState","categories","Form","onSubmit","id","Group","controlId","Label","Control","type","Row","md","placeholder","style","height","ItemTable","data","onRowDelete","Table","striped","borderless","hover","size","base64","name","color","amount","price","description","store","src","alt","Button","onClick","App","show","setShow","handleClose","JSON","parse","localStorage","getItem","setItem","stringify","setData","Modal","onHide","closeButton","Title","e","a","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","target","originalValue","previousValue","files","newValue","push","preventDefault","Footer","form","newProperties","filter","filtered","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4gCAKA,SAASA,EAAT,GAA4E,IAAxDC,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,MAAyBC,GAAuB,EAAzCC,iBAAyC,EAAvBD,qBAC5CE,EAAe,SAACC,GACpBH,GAAoB,SAACI,GACnB,OAAO,2BAAKA,GAAZ,kBAAwBN,EAAQK,QAGpC,OACE,cAACE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWC,UAAU,uBAArB,SACE,eAACD,EAAA,EAAUE,KAAX,CAAgBC,SAAS,IAAzB,UACE,cAACH,EAAA,EAAUI,OAAX,UAAmBZ,IAClBC,EAAMY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,cAAX,OACT,cAACP,EAAA,EAAUQ,KAAX,UACE,cAACC,EAAA,EAAD,CACEC,GAAIC,IACJC,QAAQ,UACRC,SAAUjB,EACVJ,MAAOc,EAJT,SAOGC,EAAcF,KAAI,SAAAS,GAAW,OAC5B,cAACC,EAAA,EAASb,KAAV,CAAiCC,SAAUW,EAA3C,SAAyDA,GAArCA,SATLR,aAoBlB,SAASU,EAAT,GAA4C,IAArBC,EAAoB,EAApBA,iBACpC,EAAgDC,mBAAS,IAAzD,mBAAOvB,EAAP,KAAyBD,EAAzB,KACA,OACE,qCACGyB,EAAWd,KACV,gBAAGb,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACE,cAACF,EAAD,CAAsBC,MAAOA,EAAOG,iBAAkBA,EAAkBD,oBAAqBA,EAAqBD,MAAOA,GAA1GD,MAGnB,eAAC4B,EAAA,EAAD,CAAMC,SAAUJ,EAAiBtB,GAAmB2B,GAAG,aAAvD,UACE,eAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,WAAWvB,UAAU,OAA3C,UACE,cAACmB,EAAA,EAAKK,MAAN,2BACA,cAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,YAErB,eAACC,EAAA,EAAD,WACE,cAAC7B,EAAA,EAAD,CAAK8B,IAAE,EAAP,SACE,eAACT,EAAA,EAAKG,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,mBACA,cAACL,EAAA,EAAKM,QAAN,CAAcI,YAAY,0BAG9B,cAAC/B,EAAA,EAAD,CAAK8B,IAAE,EAAP,SACE,eAACT,EAAA,EAAKG,MAAN,CAAYC,UAAU,YAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,oBACA,cAACL,EAAA,EAAKM,QAAN,CAAcI,YAAY,kBAIhC,eAACF,EAAA,EAAD,WACE,cAAC7B,EAAA,EAAD,CAAK8B,IAAE,EAAP,SACE,eAACT,EAAA,EAAKG,MAAN,CAAYC,UAAU,aAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,qBACA,cAACL,EAAA,EAAKM,QAAN,CAAcI,YAAY,gBAG9B,cAAC/B,EAAA,EAAD,CAAK8B,IAAE,EAAP,SACE,eAACT,EAAA,EAAKG,MAAN,CAAYC,UAAU,YAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,oBACA,cAACL,EAAA,EAAKM,QAAN,CAAcI,YAAY,kBAIhC,eAACV,EAAA,EAAKG,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,+BACA,cAACL,EAAA,EAAKM,QAAN,CAAcI,YAAY,mBAAmBC,MAAO,CAAEC,OAAQ,cAEhE,eAACZ,EAAA,EAAKG,MAAN,CAAYC,UAAU,eAAtB,UACE,cAACJ,EAAA,EAAKK,MAAN,6BACA,cAACL,EAAA,EAAKM,QAAN,CAAcI,YAAY,4B,YClFrB,SAASG,EAAT,GAA2C,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACxC,OACE,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAACC,OAAK,EAAC3B,QAAQ,OAAO4B,KAAK,KAApD,UACE,gCACE,+BACE,mCACA,yCACA,8CACA,yCACA,0CACA,uCACA,6CACA,uCACA,4BAGJ,gCACGN,EAAK7B,KAAI,gBAAGoC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,MAAOC,EAAvC,EAAuCA,YAAaC,EAApD,EAAoDA,MAApD,OACR,+BACE,uBACA,mCAAK,qBAAKC,IAAKP,EAAQQ,IAAI,KAA3B,OACA,6BAAKP,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BACE,cAACG,EAAA,EAAD,CAAQC,QAAS,kBAAMhB,EAAYO,IAAnC,mCCkFCU,MA9Ff,WACE,MAAwBlC,oBAAS,GAAjC,mBAAOmC,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,IAElC,EAAwBpC,mBAdLsC,KAAKC,MAAMC,aAAaC,QAAQ,iBAGjDD,aAAaE,QAAQ,aAAcJ,KAAKK,UAAU,KAC3C,KAUT,mBAAO3B,EAAP,KAAa4B,EAAb,KA2DA,OACE,mCACE,qBAAK7D,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAACiD,EAAA,EAAD,CAAQtC,QAAQ,UAAUuC,QAhEf,kBAAMG,GAAQ,IAgEzB,sBAIA,eAACS,EAAA,EAAD,CAAOV,KAAMA,EAAMW,OAAQT,EAA3B,UACE,cAACQ,EAAA,EAAM3D,OAAP,CAAc6D,aAAW,EAAzB,SACE,cAACF,EAAA,EAAMG,MAAP,yBAEF,eAACH,EAAA,EAAMvD,KAAP,eAAa,cAACQ,EAAD,CAAaC,iBAjEX,SAACE,GAAD,8CAAgB,WAAOgD,GAAP,qCAAAC,EAAA,yDAEjCC,EAAgB,SAACC,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcN,GACzBI,EAAWG,OAAS,WAClBL,EAAQE,EAAWI,SAErBJ,EAAWK,QAAU,SAACC,GACpBP,EAAOO,QAOPtC,EAAOyB,EAAEc,OAAO,GAAGpF,MACnB8C,EAAQwB,EAAEc,OAAO,GAAGpF,MACpB+C,EAASuB,EAAEc,OAAO,GAAGpF,MACrBgD,EAAQsB,EAAEc,OAAO,GAAGpF,MACpBiD,EAAcqB,EAAEc,OAAO,GAAGpF,MAC1BkD,EAAQoB,EAAEc,OAAO,GAAGpF,MACtBqF,EAAgBxB,aAAaC,QAAQ,cACrCwB,EAxBmC,UAwBnB3B,KAAKC,MAAMyB,UAxBQ,QAwBU,GAC7CzC,EAAS,IACT0B,EAAEc,OAAO,GAAGG,MAAM,GA1BiB,kCA2BtBf,EAAcF,EAAEc,OAAO,GAAGG,MAAM,IA3BV,QA2BrC3C,EA3BqC,eA6BnC4C,EAAW,CAAElE,aAAYsB,SAAQC,OAAMC,QAAOC,SAAQC,QAAOC,cAAaC,SAC9EoC,EAAcG,KAAKD,GACnB3B,aAAaE,QAAQ,aAAcJ,KAAKK,UAAUsB,IAClDrB,EAAQqB,GACRhB,EAAEoB,iBAjCqC,4CAAhB,yDAiEf,OACA,eAACxB,EAAA,EAAMyB,OAAP,WACE,cAACtC,EAAA,EAAD,CAAQtC,QAAQ,YAAYuC,QAASI,EAArC,mBAGA,cAACL,EAAA,EAAD,CAAQtC,QAAQ,UAAUuC,QAASI,EAAa5B,KAAK,SAAS8D,KAAK,aAAnE,gCAMJ,cAACxD,EAAD,CAAWC,KAAMA,EAAMC,YAvCX,SAACO,GACnB,IACMgD,EADalC,KAAKC,MAAMC,aAAaC,QAAQ,eAClBgC,QAAO,SAAUC,GAChD,OAAOA,EAASlD,OAASA,KAI3BgB,aAAaE,QAAQ,aAAcJ,KAAKK,UAAU6B,IAClD5B,EAAQ4B,cC9DGG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c1e108e0.chunk.js","sourcesContent":["import { DropdownButton, ButtonGroup, Dropdown, Accordion, Row, Col, Form, } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nimport categories from './categories.json';\r\n\r\n\r\nfunction Category({ title, items, selectedCategory, setSelectedCategory }) {\r\n  const handleSelect = (value) => {\r\n    setSelectedCategory((oldValues) => {\r\n      return { ...oldValues, [title]: value };\r\n    })\r\n  }\r\n  return (\r\n    <Col>\r\n      <Accordion className=\"categories-container\">\r\n        <Accordion.Item eventKey=\"0\">\r\n          <Accordion.Header>{title}</Accordion.Header>\r\n          {items.map(({ titles, subCategories }) => (\r\n            <Accordion.Body key={titles}>\r\n              <DropdownButton\r\n                as={ButtonGroup}\r\n                variant=\"primary\"\r\n                onSelect={handleSelect}\r\n                title={titles}\r\n\r\n              >\r\n                {subCategories.map(subCategory => (\r\n                  <Dropdown.Item key={subCategory} eventKey={subCategory}>{subCategory}</Dropdown.Item>\r\n                ))}\r\n              </DropdownButton>\r\n            </Accordion.Body>\r\n          ))}\r\n        </Accordion.Item>\r\n      </Accordion>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default function AddItemForm({ makeHandleSubmit }) {\r\n  const [selectedCategory, setSelectedCategory] = useState({});\r\n  return (\r\n    <>\r\n      {categories.map(\r\n        ({ title, items }) => (\r\n          <Category key={title} title={title} selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} items={items} />\r\n        ),\r\n      )}\r\n      <Form onSubmit={makeHandleSubmit(selectedCategory)} id=\"submitForm\">\r\n        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n          <Form.Label>Item Picture</Form.Label>\r\n          <Form.Control type=\"file\" />\r\n        </Form.Group>\r\n        <Row>\r\n          <Col md>\r\n            <Form.Group controlId=\"formName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control placeholder=\"Name of Material\" />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md>\r\n            <Form.Group controlId=\"formColor\">\r\n              <Form.Label>Color</Form.Label>\r\n              <Form.Control placeholder=\"Color\" />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md>\r\n            <Form.Group controlId=\"formLength\">\r\n              <Form.Label>Amount</Form.Label>\r\n              <Form.Control placeholder=\"Length\" />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md>\r\n            <Form.Group controlId=\"formPrice\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control placeholder=\"Price\" />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group controlId=\"formDescription\">\r\n          <Form.Label>Item Description</Form.Label>\r\n          <Form.Control placeholder=\"Item Description\" style={{ height: '100px' }} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formLocation\">\r\n          <Form.Label>Store Location</Form.Label>\r\n          <Form.Control placeholder=\"Store Location\" />\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n}","import { Table, Button } from 'react-bootstrap';\r\n\r\n\r\nexport default function ItemTable({ data, onRowDelete }) {\r\n  return (\r\n    <Table striped borderless hover variant=\"dark\" size=\"sm\">\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>picture</th>\r\n          <th>Product Name</th>\r\n          <th> color </th>\r\n          <th> amount </th>\r\n          <th>price</th>\r\n          <th>description</th>\r\n          <th>store</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map(({ base64, name, color, amount, price, description, store }) => (\r\n          <tr>\r\n            <td></td>\r\n            <td> <img src={base64} alt=\"\"/> </td>\r\n            <td>{name}</td>\r\n            <td>{color}</td>\r\n            <td>{amount}</td>\r\n            <td>{price}</td>\r\n            <td>{description}</td>\r\n            <td>{store}</td>\r\n            <td>\r\n              <Button onClick={() => onRowDelete(name)}> Delete </Button>\r\n\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}","import { Button, Modal } from \"react-bootstrap\"\nimport { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport AddItemForm from './ItemForm.js';\nimport ItemTable from './Table.js';\n\n\nconst getProperties = () => {\n  const properties = JSON.parse(localStorage.getItem('properties'))\n\n  if (!properties) {\n    localStorage.setItem('properties', JSON.stringify([]));\n    return []\n  }\n  return properties\n}\n\n\nfunction App() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [data, setData] = useState(getProperties())\n\n\n\n\n\n  const makeHandleSubmit = (categories) => async (e) => {\n\n    const convertBase64 = (file) => {\n      return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(file);\n        fileReader.onload = () => {\n          resolve(fileReader.result);\n        }\n        fileReader.onerror = (error) => {\n          reject(error);\n        }\n      });\n    };\n\n\n    //const picture = e.target[0].value;\n    const name = e.target[1].value;\n    const color = e.target[2].value;\n    const amount = e.target[3].value;\n    const price = e.target[4].value;\n    const description = e.target[5].value;\n    const store = e.target[6].value;\n    let originalValue = localStorage.getItem('properties');\n    let previousValue = JSON.parse(originalValue) ?? [];\n    let base64 = \"\";\n    if (e.target[0].files[0]) {\n      base64 = await convertBase64(e.target[0].files[0]);\n    }\n    let newValue = { categories, base64, name, color, amount, price, description, store };\n    previousValue.push(newValue);\n    localStorage.setItem('properties', JSON.stringify(previousValue));\n    setData(previousValue);\n    e.preventDefault();\n\n  }\n\n  const onRowDelete = (name) => {\n    const properties = JSON.parse(localStorage.getItem('properties'))\n    const newProperties = properties.filter(function (filtered) {\n      return filtered.name !== name;\n    }\n    );\n\n    localStorage.setItem('properties', JSON.stringify(newProperties));\n    setData(newProperties);\n\n\n\n\n  }\n\n\n  return (\n    <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Button variant=\"primary\" onClick={handleShow}>\n            Add Item\n          </Button>\n\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Add Item</Modal.Title>\n            </Modal.Header>\n            <Modal.Body> <AddItemForm makeHandleSubmit={makeHandleSubmit} /> </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={handleClose} type=\"submit\" form=\"submitForm\">\n                Save Changes\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          <ItemTable data={data} onRowDelete={onRowDelete} />\n        </header>\n      </div>\n    </>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}