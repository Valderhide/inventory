{"version":3,"sources":["App.js","components/ItemForm.js","components/Table.js","pages/Inventory.js","pages/Print.js","pages/Homepage.js","index.js"],"names":["App","Navbar","Container","Brand","href","Collapse","id","Nav","className","Link","Category","title","items","setSelectedCategory","handleSelect","value","Col","Accordion","Item","eventKey","Header","map","titles","subCategories","Body","DropdownButton","as","ButtonGroup","variant","onSelect","subCategory","Dropdown","AddItemForm","makeHandleSubmit","useState","selectedCategory","categories","categoryString","Form","onSubmit","Group","controlId","Label","Control","type","Row","md","placeholder","style","height","ItemTable","state","dispatch","onRowDelete","tableData","sum","Table","striped","borderless","hover","size","category","onChange","e","target","name","color","amount","price","description","store","Button","onClick","length","base64","src","alt","Math","random","toString","substr","entries","Object","x","join","Inv","data","setData","show","setShow","handleClose","reduce","accumulator","parseFloat","toFixed","to","pathname","Modal","onHide","closeButton","Title","a","convertBase64","file","exec","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","alert","originalValue","localStorage","getItem","previousValue","JSON","parse","files","newValue","push","setItem","stringify","preventDefault","Footer","form","newProperties","filter","filtered","Print","class","window","print","HomePage","rootElement","document","getElementById","reducer","event","InventoryApp","useReducer","setTableData","useEffect","newData","item","toLowerCase","includes","path","element","index","render"],"mappings":"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","file":"static/js/main.8212b04d.chunk.js","sourcesContent":["import { Outlet } from \"react-router-dom\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\n\nexport default function App() {\n  return (\n    <div>\n      <Navbar>\n        <Container>\n          <Navbar.Brand href=\"/\">Quilting Inventory</Navbar.Brand>\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"/inventory\">Inventory</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <Outlet />\n    </div>\n  );\n}\n","import {\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n  Accordion,\n  Row,\n  Col,\n  Form,\n} from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport categories from \"./categories.json\";\nimport { categoryString } from \"../pages/Inventory\";\n\nfunction Category({ title, items, setSelectedCategory }) {\n  const handleSelect = (value) => {\n    setSelectedCategory(() => {\n      return { [title]: value };\n    });\n  };\n  return (\n    <Col>\n      <Accordion className=\"categories-container\">\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>{title}</Accordion.Header>\n          {items.map(({ titles, subCategories }) => (\n            <Accordion.Body key={titles}>\n              <DropdownButton\n                as={ButtonGroup}\n                variant=\"primary\"\n                onSelect={handleSelect}\n                title={titles}\n              >\n                {subCategories.map((subCategory) => (\n                  <Dropdown.Item key={subCategory} eventKey={subCategory}>\n                    {subCategory}\n                  </Dropdown.Item>\n                ))}\n              </DropdownButton>\n            </Accordion.Body>\n          ))}\n        </Accordion.Item>\n      </Accordion>\n    </Col>\n  );\n}\n\nexport default function AddItemForm({ makeHandleSubmit }) {\n  const [selectedCategory, setSelectedCategory] = useState({});\n  return (\n    <>\n      {categories.map(({ title, items }) => (\n        <Category\n          key={title}\n          title={title}\n          selectedCategory={selectedCategory}\n          setSelectedCategory={setSelectedCategory}\n          items={items}\n        />\n      ))}\n      <p>{categoryString(selectedCategory)}</p>\n      <Form onSubmit={makeHandleSubmit(selectedCategory)} id=\"submitForm\">\n        <Form.Group controlId=\"formFile\" className=\"mb-3\">\n          <Form.Label>Item Picture</Form.Label>\n          <Form.Control type=\"file\" />\n        </Form.Group>\n        <Row>\n          <Col md>\n            <Form.Group controlId=\"formName\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control placeholder=\"Name of Material\" />\n            </Form.Group>\n          </Col>\n          <Col md>\n            <Form.Group controlId=\"formColor\">\n              <Form.Label>Color</Form.Label>\n              <Form.Control placeholder=\"Color\" />\n            </Form.Group>\n          </Col>\n        </Row>\n        <Row>\n          <Col md>\n            <Form.Group controlId=\"formLength\">\n              <Form.Label>Amount</Form.Label>\n              <Form.Control placeholder=\"Length\" />\n            </Form.Group>\n          </Col>\n          <Col md>\n            <Form.Group controlId=\"formPrice\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control placeholder=\"Price\" />\n            </Form.Group>\n          </Col>\n        </Row>\n        <Form.Group controlId=\"formDescription\">\n          <Form.Label>Item Description</Form.Label>\n          <Form.Control\n            placeholder=\"Item Description\"\n            style={{ height: \"100px\" }}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formLocation\">\n          <Form.Label>Store Location</Form.Label>\n          <Form.Control placeholder=\"Store Location\" />\n        </Form.Group>\n      </Form>\n    </>\n  );\n}\n","import { Table, Button } from \"react-bootstrap\";\nimport { categoryString } from \"../pages/Inventory\";\n\nexport default function ItemTable({\n  state,\n  dispatch,\n  onRowDelete,\n  tableData,\n  sum,\n}) {\n  const id = () => {\n    return \"_\" + Math.random().toString(36).substr(2, 9);\n  };\n\n  const handleShowTable = () => {\n    if (tableData.length === 0) {\n      return (\n        <tbody>\n          No Items found, please add item via Add Item button at top of page\n        </tbody>\n      );\n    }\n    return (\n      <tbody>\n        {tableData.map(\n          ({\n            categories,\n            base64,\n            name,\n            color,\n            amount,\n            price,\n            description,\n            store,\n          }) => (\n            <tr key={id()}>\n              <td key={base64}>\n                {\" \"}\n                <img src={base64} alt=\"\" />{\" \"}\n              </td>\n              <td key={categoryString(categories)}>\n                {categoryString(categories)}\n              </td>\n\n              <td key={name}>{name}</td>\n              <td key={color}>{color}</td>\n              <td key={amount}>{amount}</td>\n              <td key={price}>{price}</td>\n              <td key={description}>{description}</td>\n              <td key={store}>{store}</td>\n              <td>\n                <Button onClick={() => onRowDelete(name)}> Delete </Button>\n              </td>\n            </tr>\n          )\n        )}\n      </tbody>\n    );\n  };\n\n  return (\n    <Table\n      id=\"myTable\"\n      striped\n      borderless\n      hover\n      variant=\"dark\"\n      size=\"sm\"\n      className=\"inv-table\"\n    >\n      <thead>\n        <tr>\n          <th>Picture</th>\n          <th>Category</th>\n          <th>Product Name</th>\n          <th>Color</th>\n          <th>Amount</th>\n          <th>Price</th>\n          <th>Description</th>\n          <th>Store</th>\n          <th></th>\n        </tr>\n        <tr>\n          <th></th>\n          <th>\n            <form>\n              <input\n                type=\"text\"\n                value={state.category}\n                onChange={(e) => dispatch({ category: e.target.value })}\n                placeholder=\"Search\"\n                size={5}\n              />\n            </form>\n          </th>\n          <th>\n            <form>\n              <input\n                type=\"text\"\n                value={state.name}\n                onChange={(e) => dispatch({ name: e.target.value })}\n                placeholder=\"Search\"\n                size={5}\n              />\n            </form>\n          </th>\n          <th>\n            <form>\n              <input\n                type=\"text\"\n                value={state.color}\n                onChange={(e) => dispatch({ color: e.target.value })}\n                placeholder=\"Search\"\n                size={5}\n              />\n            </form>\n          </th>\n          <th>\n            <form>\n              <input\n                type=\"text\"\n                value={state.amount}\n                onChange={(e) => dispatch({ amount: e.target.value })}\n                placeholder=\"Search\"\n                size={5}\n              />\n            </form>\n          </th>\n          <th>\n            <form>\n              <input\n                type=\"text\"\n                value={state.price}\n                onChange={(e) => dispatch({ price: e.target.value })}\n                placeholder=\"Search\"\n                size={5}\n              />\n            </form>\n          </th>\n          <th>\n            <form>\n              <input\n                type=\"text\"\n                value={state.description}\n                onChange={(e) => dispatch({ description: e.target.value })}\n                placeholder=\"Search\"\n                size={5}\n              />\n            </form>\n          </th>\n          <th>\n            <form>\n              <input\n                type=\"text\"\n                value={state.store}\n                onChange={(e) => dispatch({ store: e.target.value })}\n                placeholder=\"Search\"\n                size={5}\n              />\n            </form>\n          </th>\n\n          <th>\n            <Button\n              onClick={(e) =>\n                dispatch({\n                  category: \"\",\n                  name: \"\",\n                  color: \"\",\n                  amount: \"\",\n                  price: \"\",\n                  description: \"\",\n                  store: \"\",\n                })\n              }\n            >\n              {\" \"}\n              Reset{\" \"}\n            </Button>\n          </th>\n        </tr>\n      </thead>\n      {handleShowTable()}\n      <tfoot>\n        <tr>\n          <td> Total Value</td>\n          <td> ${sum} </td>\n        </tr>\n      </tfoot>\n    </Table>\n  );\n}\n","import { Button, Modal } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../components/App.css\";\nimport AddItemForm from \"../components/ItemForm.js\";\nimport ItemTable from \"../components/Table.js\";\n\nexport const categoryString = (categories) => {\n  let entries = Object.entries(categories);\n  if (entries.length === 0) {\n    return \"No Category Selected \";\n  }\n  let kv = entries.map((x) => x.join(\":\")).join(\"/n\");\n  return kv;\n};\n\nfunction Inv({ state, dispatch, tableData, data, setData }) {\n  //Back end Inventory functions\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const makeHandleSubmit = (categories) => async (e) => {\n    const convertBase64 = (file) => {\n      var allowedExtensions = /(\\.jpg|\\.jpeg|\\.png|\\.gif)$/i;\n\n      if (!allowedExtensions.exec(file.value)) {\n        alert(\n          \"Please upload file having extensions .jpeg/.jpg/.png/.gif only.\"\n        );\n        file.value = \"\";\n        return false;\n      }\n\n      return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(file);\n        fileReader.onload = () => {\n          resolve(fileReader.result);\n        };\n        fileReader.onerror = (error) => {\n          reject(error);\n        };\n      });\n    };\n\n    const name = e.target[1].value;\n    const color = e.target[2].value;\n    const amount = e.target[3].value;\n    const price = e.target[4].value;\n    const description = e.target[5].value;\n    const store = e.target[6].value;\n    let originalValue = localStorage.getItem(\"properties\");\n    let previousValue = JSON.parse(originalValue) ?? [];\n    let base64 = \"\";\n    if (e.target[0].files[0]) {\n      base64 = await convertBase64(e.target[0].files[0]);\n    }\n    let newValue = {\n      categories,\n      base64,\n      name,\n      color,\n      amount,\n      price,\n      description,\n      store,\n    };\n    previousValue.push(newValue);\n    localStorage.setItem(\"properties\", JSON.stringify(previousValue));\n    setData(previousValue);\n    e.preventDefault();\n  };\n\n  const onRowDelete = (name) => {\n    const properties = JSON.parse(localStorage.getItem(\"properties\"));\n    const newProperties = properties.filter(function (filtered) {\n      return filtered.name !== name;\n    });\n\n    localStorage.setItem(\"properties\", JSON.stringify(newProperties));\n    setData(newProperties);\n  };\n\n  //Table functions\n\n  let maths = data.reduce(\n    (accumulator, data) =>\n      accumulator + parseFloat(data.amount) * parseFloat(data.price),\n    0\n  );\n  let sum = maths.toFixed(2);\n\n  return (\n    <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Button variant=\"primary\" onClick={handleShow}>\n            Add Item\n          </Button>\n\n          <Link\n            to={{\n              pathname: \"/shoppingList\",\n              state: tableData,\n            }}\n          >\n            <Button variant=\"primary\">Shopping List</Button>\n          </Link>\n\n          {/*Modals*/}\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Add Item</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              {\" \"}\n              <AddItemForm makeHandleSubmit={makeHandleSubmit} />{\" \"}\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n              <Button\n                variant=\"primary\"\n                onClick={handleClose}\n                type=\"submit\"\n                form=\"submitForm\"\n              >\n                Save Changes\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </header>\n\n        {/*Table*/}\n\n        <ItemTable\n          data={data}\n          onRowDelete={onRowDelete}\n          tableData={tableData}\n          sum={sum}\n          dispatch={dispatch}\n          state={state}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default Inv;\n","import { Table } from \"react-bootstrap\";\n\nexport default function Print({ tableData }) {\n  let maths = tableData.reduce(\n    (accumulator, { amount, price }) =>\n      accumulator + parseFloat(amount) * parseFloat(price),\n    0\n  );\n  let sum = maths.toFixed(2);\n\n  const id = () => {\n    return \"_\" + Math.random().toString(36).substr(2, 9);\n  };\n\n  return (\n    <div>\n      <Table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Amount</th>\n            <th>Price</th>\n            <th>Store</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tableData.map(({ name, price, amount, store }) => (\n            <tr key={id()}>\n              <td key={name}>{name}</td>\n              <td key={amount}>{amount}</td>\n              <td key={price}>{price}</td>\n              <td key={store}>{store}</td>\n            </tr>\n          ))}\n        </tbody>\n        <tfoot>\n          <td> Total</td>\n          <td></td>\n          <td> {sum} </td>\n        </tfoot>\n      </Table>\n\n      <button class=\"no-print\" onClick={window.print}>\n        Print\n      </button>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport { Button, Container } from \"react-bootstrap\";\n\nexport default function HomePage() {\n  return (\n    <div>\n      <Container>\n        <h2>Introduction</h2>\n        <p>\n          <a href=\"https://github.com/Valderhide/inventory\">Github Page</a>\n        </p>\n        <p>\n          Welcome to my Inventory management app. The reason for making this app\n          is because my mother suggested this idea while I was brainstorming\n          ideas for what I wanted my first React app to be. She has A LOT of\n          fabrics, sewing, and quilting material and I was looking to move in a\n          different direction than my previous Javascript Snake Game.\n        </p>\n        <h2>How to use the App</h2>\n        <p>\n          The bulk of the work is done with the \"Add Item\" button found at the\n          top of the table, below the Navigation bar. Click the \"Add Item\"\n          button and a new menu will open with all the options you can assign\n          the item being made.\n        </p>\n        <p>\n          The first option is the Category you want to assign the item to,\n          Fabrics, Patterns, or Buttons (If you see this, more will be added in\n          the future). Only one Category can be assigned to the item, and each\n          category reveals a dropdown with subcategories, which further reveals\n          a list of properties.\n        </p>\n        <p>\n          After that you can choose to upload an image of the item from your\n          computer. The last remaining options, name, color, amount, price, item\n          description and store location are filled in manually. Once done,\n          click save changes and the item will be saved and displayed in the\n          table.\n        </p>\n        <p>\n          You will also see a little search box at the top of each column. These\n          are used to filter the properties below them. Type in the box what you\n          are looking for, and the rest will be removed from the table. Repeat\n          this for each search box and the the more items that will be filtered\n          out.\n        </p>\n\n        <p>\n          Click the link bellow or at the top of the page to access the\n          Inventory system itself\n        </p>\n\n        <Link to=\"/inventory\">\n          <Button variant=\"primary\">Inventory Page</Button>\n        </Link>\n      </Container>\n    </div>\n  );\n}\n","import { render } from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useState, useEffect, useReducer } from \"react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Inv from \"./pages/Inventory\";\nimport Print from \"./pages/Print\";\nimport HomePage from \"./pages/Homepage\";\nimport { categoryString } from \"./pages/Inventory\";\n\nconst rootElement = document.getElementById(\"root\");\n\nconst getProperties = () => {\n  const properties = JSON.parse(localStorage.getItem(\"properties\"));\n\n  if (!properties) {\n    localStorage.setItem(\"properties\", JSON.stringify([]));\n    return [];\n  }\n  return properties;\n};\n\nconst reducer = (state, event) => {\n  return { ...state, ...event };\n};\n\nconst InventoryApp = () => {\n  const [data, setData] = useState(getProperties());\n  const [state, dispatch] = useReducer(reducer, {\n    category: \"\",\n    name: \"\",\n    color: \"\",\n    amount: \"\",\n    price: \"\",\n    description: \"\",\n    store: \"\",\n  });\n  const [tableData, setTableData] = useState(data);\n\n  useEffect(() => {\n    const newData = data.filter(\n      (item) =>\n        categoryString(item.categories)\n          .toLowerCase()\n          .includes(state.category.toLowerCase()) &&\n        item.name.toLowerCase().includes(state.name.toLowerCase()) &&\n        item.color.toLowerCase().includes(state.color.toLowerCase()) &&\n        item.amount.toLowerCase().includes(state.amount.toLowerCase()) &&\n        item.price.toLowerCase().includes(state.price.toLowerCase()) &&\n        item.description\n          .toLowerCase()\n          .includes(state.description.toLowerCase()) &&\n        item.store.toLowerCase().includes(state.store.toLowerCase())\n    );\n    setTableData(newData);\n  }, [state, data]);\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route\n            path=\"inventory\"\n            element={\n              <Inv\n                tableData={tableData}\n                setTableData={setTableData}\n                data={data}\n                setData={setData}\n                dispatch={dispatch}\n                state={state}\n              />\n            }\n          />\n        </Route>\n        <Route\n          path=\"shoppingList\"\n          element={<Print tableData={tableData} setTableData={setTableData} />}\n        />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nrender(<InventoryApp />, rootElement);\n"],"sourceRoot":""}