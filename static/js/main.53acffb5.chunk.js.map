{"version":3,"sources":["ItemForm.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["Category","title","items","setSelectedCategory","selectedCategory","handleSelect","value","oldValues","Col","Accordion","className","Item","eventKey","Header","map","titles","subCategories","Body","DropdownButton","as","ButtonGroup","variant","onSelect","subCategory","Dropdown","AddItemForm","makeHandleSubmit","useState","categories","Form","onSubmit","id","Group","controlId","Label","Control","type","Row","md","placeholder","style","height","ItemTable","data","onRowDelete","Table","striped","borderless","hover","size","console","log","base64","name","color","amount","price","description","store","Fabrics","Patterns","Buttons","src","alt","Button","onClick","App","show","setShow","handleClose","handleShow","JSON","parse","localStorage","getItem","setItem","stringify","setData","Modal","onHide","closeButton","Title","e","a","convertBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","target","originalValue","previousValue","files","newValue","push","preventDefault","Footer","form","newProperties","filter","filtered","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53acffb5.chunk.js","sourcesContent":["import { DropdownButton, ButtonGroup, Dropdown, Accordion, Row, Col, Form, } from 'react-bootstrap';\nimport { useState } from 'react';\nimport categories from './categories.json';\n\n\nfunction Category({ title, items, selectedCategory, setSelectedCategory }) {\n  const handleSelect = (value) => {\n    setSelectedCategory((oldValues) => {\n      return { ...oldValues, [title]: value };\n    })\n  }\n  return (\n    <Col>\n      <Accordion className=\"categories-container\">\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>{title}</Accordion.Header>\n          {items.map(({ titles, subCategories }) => (\n            <Accordion.Body key={titles}>\n              <DropdownButton\n                as={ButtonGroup}\n                variant=\"primary\"\n                onSelect={handleSelect}\n                title={titles}\n\n              >\n                {subCategories.map(subCategory => (\n                  <Dropdown.Item key={subCategory} eventKey={subCategory}>{subCategory}</Dropdown.Item>\n                ))}\n              </DropdownButton>\n            </Accordion.Body>\n          ))}\n        </Accordion.Item>\n      </Accordion>\n    </Col>\n  );\n}\n\nexport default function AddItemForm({ makeHandleSubmit }) {\n  const [selectedCategory, setSelectedCategory] = useState({});\n  return (\n    <>\n      {categories.map(\n        ({ title, items }) => (\n          <Category key={title} title={title} selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} items={items} />\n        ),\n      )}\n      <Form onSubmit={makeHandleSubmit(selectedCategory)} id=\"submitForm\">\n        <Form.Group controlId=\"formFile\" className=\"mb-3\">\n          <Form.Label>Item Picture</Form.Label>\n          <Form.Control type=\"file\" />\n        </Form.Group>\n        <Row>\n          <Col md>\n            <Form.Group controlId=\"formName\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control placeholder=\"Name of Material\" />\n            </Form.Group>\n          </Col>\n          <Col md>\n            <Form.Group controlId=\"formColor\">\n              <Form.Label>Color</Form.Label>\n              <Form.Control placeholder=\"Color\" />\n            </Form.Group>\n          </Col>\n        </Row>\n        <Row>\n          <Col md>\n            <Form.Group controlId=\"formLength\">\n              <Form.Label>Amount</Form.Label>\n              <Form.Control placeholder=\"Length\" />\n            </Form.Group>\n          </Col>\n          <Col md>\n            <Form.Group controlId=\"formPrice\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control placeholder=\"Price\" />\n            </Form.Group>\n          </Col>\n        </Row>\n        <Form.Group controlId=\"formDescription\">\n          <Form.Label>Item Description</Form.Label>\n          <Form.Control placeholder=\"Item Description\" style={{ height: '100px' }} />\n        </Form.Group>\n        <Form.Group controlId=\"formLocation\">\n          <Form.Label>Store Location</Form.Label>\n          <Form.Control placeholder=\"Store Location\" />\n        </Form.Group>\n      </Form>\n    </>\n  );\n}","import { Table, Button } from 'react-bootstrap';\n\n\nexport default function ItemTable({ data, onRowDelete }) {\n  return (\n    <Table striped borderless hover variant=\"dark\" size=\"sm\">\n      <thead>\n        <tr>\n          <th>Fabrics</th>\n          <th>Patterns</th>\n          <th>Buttons</th>\n          <th>picture</th>\n          <th>Product Name</th>\n          <th> color </th>\n          <th> amount </th>\n          <th>price</th>\n          <th>description</th>\n          <th>store</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n      {console.log(data)}\n      {data.map(({categories, base64, name, color, amount, price, description, store}) => (\n          <tr>\n            <td>{`${categories?.Fabrics}`}</td>\n            <td>{`${categories?.Patterns}`}</td>\n            <td>{`${categories?.Buttons}`}</td>\n            <td> <img src={base64} alt=\"\"/> </td>\n            <td>{name}</td>\n            <td>{color}</td>\n            <td>{amount}</td>\n            <td>{price}</td>\n            <td>{description}</td>\n            <td>{store}</td>\n            <td>\n              <Button onClick={() => onRowDelete(name)}> Delete </Button>\n\n        </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}","import { Button, Modal } from \"react-bootstrap\"\nimport { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport AddItemForm from './ItemForm.js';\nimport ItemTable from './Table.js';\n\n\nconst getProperties = () => {\n  const properties = JSON.parse(localStorage.getItem('properties'))\n\n  if (!properties) {\n    localStorage.setItem('properties', JSON.stringify([]));\n    return []\n  }\n  return properties\n}\n\n\nfunction App() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [data, setData] = useState(getProperties())\n\n\n\n\n\n  const makeHandleSubmit = (categories) => async (e) => {\n\n    const convertBase64 = (file) => {\n      return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(file);\n        fileReader.onload = () => {\n          resolve(fileReader.result);\n        }\n        fileReader.onerror = (error) => {\n          reject(error);\n        }\n      });\n    };\n\n\n    //const picture = e.target[0].value;\n    const name = e.target[1].value;\n    const color = e.target[2].value;\n    const amount = e.target[3].value;\n    const price = e.target[4].value;\n    const description = e.target[5].value;\n    const store = e.target[6].value;\n    let originalValue = localStorage.getItem('properties');\n    let previousValue = JSON.parse(originalValue) ?? [];\n    let base64 = \"\";\n    if (e.target[0].files[0]) {\n      base64 = await convertBase64(e.target[0].files[0]);\n    }\n    let newValue = { categories, base64, name, color, amount, price, description, store };\n    previousValue.push(newValue);\n    localStorage.setItem('properties', JSON.stringify(previousValue));\n    setData(previousValue);\n    e.preventDefault();\n\n  }\n\n  const onRowDelete = (name) => {\n    const properties = JSON.parse(localStorage.getItem('properties'))\n    const newProperties = properties.filter(function (filtered) {\n      return filtered.name !== name;\n    }\n    );\n\n    localStorage.setItem('properties', JSON.stringify(newProperties));\n    setData(newProperties);\n\n\n\n\n  }\n\n\n  return (\n    <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Button variant=\"primary\" onClick={handleShow}>\n            Add Item\n          </Button>\n\n          <Button variant=\"primary\" onClick={handleShow}>\n            Get Shopping List\n          </Button>\n\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Add Item</Modal.Title>\n            </Modal.Header>\n            <Modal.Body> <AddItemForm makeHandleSubmit={makeHandleSubmit} /> </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={handleClose} type=\"submit\" form=\"submitForm\">\n                Save Changes\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          <Modal /*show={show} onHide={handleClose}*/>\n            <Modal.Header closeButton>\n              <Modal.Title>Shopping List</Modal.Title>\n            </Modal.Header>\n            <Modal.Body> Test </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant=\"primary\" onClick={handleClose} type=\"submit\" form=\"submitForm\">\n                Export/Print\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n        </header>\n\n        <table className=\"inv-table\">\n          <ItemTable data={data} onRowDelete={onRowDelete} />\n        </table>\n      </div>\n    </>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}